@model IEnumerable<DEKL.CP.UI.ViewModels.AccountsToPay.AccountToPayRelashionships>

@section styles{
    @Styles.Render("~/Content/datatables")
}
<div class="container-content">

    <h2>Contas a Pagar</h2>

    <div class="row">
        <div class="col-md-12">
            <section id="changePasswordForm">
                <p>
                    @Html.ActionLink("Adicionar", "Create", null, new { @class = "btn btn-info" })
                    @Html.ActionLink("Simular Pagamento", "Index", "Simulator", null, new { @class = "btn btn-info" })
                </p>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(m => m.DocumentNumber)</th>
                            <th>@Html.DisplayNameFor(m => m.Provider)</th>
                            <th>@Html.DisplayNameFor(m => m.Value)</th>
                            <th>@Html.DisplayNameFor(m => m.Penalty)</th>
                            <th>@Html.DisplayNameFor(m => m.IsPaid)</th>
                            <th>@Html.DisplayNameFor(m => m.MonthlyAccount)</th>
                            <th>@Html.DisplayNameFor(m => m.MaturityDate)</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(m => item.DocumentNumber)</td>
                                <td>@Html.DisplayFor(m => item.Provider)</td>
                                <td>@Html.DisplayFor(m => item.Value)</td>
                                <td>@Html.DisplayFor(m => item.Penalty)</td>
                                <td>@(item.MonthlyAccount ? "Não se aplica" : (item.IsPaid ? "Sim" : "Não"))</td>
                                <td>@(item.MonthlyAccount ? "Sim" : "Não")</td>
                                <td>@Html.DisplayFor(m => item.MaturityDate)</td>

                                <td>
                                    @if (User.IsInRole("Administrador"))
                                    {
                                        <a href='@(Url.Action("Edit", new {id = item.Id}))'><i class="fas fa-pen"></i></a>
                                        <a href='@(Url.Action("Delete", new {id = item.Id}))'><i class="fas fa-trash"></i></a>
                                    }

                                    <a href='@(Url.Action("Details", new {id = item.Id}))'><i class="fas fa-info-circle"></i></a>
                                    <a href='@(Url.Action("Payment", new {id = item.Id}))'><i class="fa fa-credit-card"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </section>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/datatables")
    <script type="text/javascript">
        $(() => {
            $('.table').DataTable({
                tabIndex: -1,
                scrollY: "380px",
                scrollCollapse: true,
                responsive: true,
                columnDefs: [
                    { className: "text-left", "targets": [0, 1] },
                    { className: "text-center", "targets": [5, 6] },
                    { width: "10%", "targets": 7 },
                    { orderable: false, "targets": 7 }
                ],
                language: {
                    decimal: "",
                    emptyTable: "Sem dados disponíveis na tabela",
                    info: "Página _PAGE_ de _PAGES_",
                    infoEmpty: "Sem registros disponíveis",
                    infoFiltered: "(filtrados do total de _MAX_ registros)",
                    infoPostFix: "",
                    thousands: ",",
                    lengthMenu: "Exibir _MENU_ linhas por página",
                    loadingRecords: "Carregando...",
                    processing: "Processando...",
                    search: "Filtrar:",
                    zeroRecords: "Não encontrado",
                    paginate: {
                        first: "Primeiro",
                        last: "Último",
                        next: "Avançar",
                        previous: "Voltar"
                    },
                    aria: {
                        sortAscending: ":ativado para ordenação ascendente",
                        sortDescending: ":ativado para ordenação descendente"
                    }
                }
            });
        });
    </script>
}
