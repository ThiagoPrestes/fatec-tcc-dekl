@using DEKL.CP.UI.Extensions
@model DEKL.CP.UI.ViewModels.Address.AddressVM

@Html.HiddenFor(m => m.Address.Id)

<div class="form-row">
    <div class="form-group col-md-3">
        @Html.LabelFor(m => m.Address.ZipCode, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Address.ZipCode, new { @class = "form-control", placeholder = "00000-000" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.ZipCode, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="form-group col-md-7">
        @Html.LabelFor(m => m.Address.Street, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Address.Street, new { @class = "form-control", placeholder = "Digite a rua ou avenida" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.Street, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="form-group col-md-2">
        @Html.LabelFor(m => m.Address.Number, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Address.Number, new { @class = "form-control", placeholder = "000" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.Number, null, new { @class = "text-danger" })
        </small>
    </div>
</div>
<div class="form-row">
    <div class="form-group col-md-8">
        @Html.LabelFor(m => m.Address.Neighborhood, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Address.Neighborhood, new { @class = "form-control", placeholder = "Digite o bairro" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.Neighborhood, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="form-group col-md-4">
        @Html.LabelFor(m => m.Address.City, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Address.City, new { @class = "form-control", placeholder = "Digite a cidade" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.City, null, new { @class = "text-danger" })
        </small>
    </div>
</div>

<div class="form-row">
    <div class="form-group col-md-4">
        @Html.LabelFor(m => m.Address.StateId, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.Address.StateId, ViewBag.States as SelectList, "Selecione o Estado", new { @class = "form-control" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.StateId, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="form-group col-md-8">
        @Html.LabelFor(m => m.Address.Complement, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Address.Complement, new { @class = "form-control", placeholder = "Ex: casa 1, próximo ao mercado Bom Lugar" })
        <small>
            @Html.ValidationMessageFor(m => m.Address.Complement, null, new { @class = "text-danger" })
        </small>
    </div>
</div>

@this.ScriptBlock(
    @<script type="text/javascript">
         $('#Address_ZipCode').focusout(function () {
             $.getScript(
                 'http://cep.republicavirtual.com.br/web_cep.php' + "?formato=javascript&cep=" + this.value, function () {
                     if (resultadoCEP["resultado"]) {
                         $('#Address_Street').val(unescape(resultadoCEP["tipo_logradouro"]) + " " + unescape(resultadoCEP["logradouro"]));
                         $('#Address_Neighborhood').val(unescape(resultadoCEP["bairro"]));
                         $('#Address_City').val(unescape(resultadoCEP["cidade"]));
                         $('#Address_StateId').val($('#Address_StateId option:contains(' + unescape(resultadoCEP["uf"]) + ')').val()).change();
                         $('#Address_Number').focus();
                     }
                 });
         });
    </script>
)